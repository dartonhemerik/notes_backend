{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","successMessageStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorMessageStyle","Notification","successMessage","errorMessage","style","Footer","fontStyle","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","setSuccessMessage","setErrorMessage","useEffect","initialNotes","notesToShow","filter","map","find","n","console","log","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5b02164.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? 'make not important' : 'make important';\r\n  return (\r\n    <li className='note'>\r\n      {note.content} <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ successMessage, errorMessage }) => {\r\n  if (successMessage === null && errorMessage === null) {\r\n    return null;\r\n  }\r\n  if (successMessage) {\r\n    return <div style={successMessageStyle}>{successMessage}</div>;\r\n  }\r\n  if (errorMessage) {\r\n    return <div style={errorMessageStyle}>{errorMessage}</div>;\r\n  }\r\n};\r\n\r\nconst successMessageStyle = {\r\n  color: 'green',\r\n  background: 'lightgrey',\r\n  fontSize: 20,\r\n  borderStyle: 'solid',\r\n  borderRadius: 5,\r\n  padding: 10,\r\n  marginBottom: 10,\r\n};\r\nconst errorMessageStyle = {\r\n  color: 'red',\r\n  background: 'lightgrey',\r\n  fontSize: 20,\r\n  borderStyle: 'solid',\r\n  borderRadius: 5,\r\n  padding: 10,\r\n  marginBottom: 10,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16,\r\n  };\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Depart of Computer Science, University of Helsinki 2021</em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/notes';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst noteService = {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n\r\nexport default noteService;\r\n","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\n// import axios from 'axios';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Retrieve data from .json\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  // Add new data\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setSuccessMessage(`A new note has been added.`);\n      setTimeout(() => {\n        setSuccessMessage(null);\n      }, 5000);\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  // Updata data\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    console.log(note);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `the note '${note.content}' was already deleted from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification successMessage={successMessage} errorMessage={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type='submit'>save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}